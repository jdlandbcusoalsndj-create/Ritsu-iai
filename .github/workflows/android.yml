name: Ritsu AI Assistant CI/CD

on:
  push:
    branches: [ main, develop, cursor/crear-asistente-de-ia-con-launcher-3d-007d ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: gradle

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Build Debug APK
      run: ./gradlew assembleDebug

    - name: Upload Debug APK
      uses: actions/upload-artifact@v3
      with:
        name: ritsu-ai-assistant-debug
        path: app/build/outputs/apk/debug/app-debug.apk
        retention-days: 30

  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: gradle

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Run tests
      run: ./gradlew test

  lint:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: gradle

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Run lint
      run: ./gradlew lint

  release:
    needs: [build, test, lint]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
    - uses: actions/checkout@v4

    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: gradle

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Build Release APK
      run: ./gradlew assembleRelease

    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ github.run_number }}
        release_name: ðŸŽ­ Ritsu AI Assistant v${{ github.run_number }}
        body: |
          ## ðŸŽ­ðŸ¤– Ritsu AI Assistant v${{ github.run_number }}
          
          ### âœ¨ Features
          - **Launcher personalizado** con avatar 3D interactivo
          - **IA conversacional 100% gratuita** con modelos LLaMA locales
          - **Llamadas telefÃ³nicas conversacionales** reales
          - **Reconocimiento de voz** offline con Vosk
          - **SÃ­ntesis de voz** natural con eSpeak-NG
          - **Interfaz anime** moderna con Material Design 3
          
          ### ðŸ”§ Technical
          - Arquitectura MVVM optimizada
          - Base de datos Room completa (8 entidades)
          - Servicios de sistema integrados
          - GestiÃ³n de preferencias segura con DataStore
          - Jetpack Compose para UI moderna
          
          ### ðŸ”’ Privacy & Security
          - âœ… **Procesamiento 100% local** - Sin envÃ­o de datos
          - âœ… **Modelos offline** - Funcionamiento sin internet
          - âœ… **EncriptaciÃ³n de datos** - Almacenamiento seguro
          - âœ… **Permisos mÃ­nimos** - Solo los necesarios
          
          ### ðŸ’° Completely Free
          - âœ… **Sin APIs de pago** - Todo es cÃ³digo abierto
          - âœ… **Sin lÃ­mites de uso** - Uso ilimitado
          - âœ… **Sin suscripciones** - Gratis para siempre
          
          ### ðŸ“± Installation
          1. Download the APK below
          2. Enable "Install from unknown sources"
          3. Install the application
          4. Set as default launcher
          5. Grant necessary permissions
          6. Configure accessibility services
          
          **Download the APK and experience the future of mobile AI!** ðŸŽ­ðŸ¤–âœ¨
        draft: false
        prerelease: false

    - name: Upload Release APK
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./app/build/outputs/apk/release/app-release-unsigned.apk
        asset_name: RitsuAIAssistant-v${{ github.run_number }}.apk
        asset_content_type: application/vnd.android.package-archive